{"version":3,"sources":["../../../src/components/Lcd/index.ts"],"names":["Lcd","constructor","args","internalLcd","InternalLcd","at","col","row","setCursor","print","str","Promise","resolve","reject","err","printAt","clear","home","showCursor","cursor","hideCursor","noCursor","showBlink","blink","scrollDisplayLeft","hideBlink","noBlink","scrollDisplayRight","leftToRight","rightToLeft","autoScrollOn","autoscroll","autoScrollOff","noAutoscroll","close","getPins","rs","e","data","getPinCodes","d1","d2","d3","d4","releasePins"],"mappings":"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","sourcesContent":["import InternalLcd from 'lcd';\n\nexport interface LcdPins {\n  rs: number,\n  e: number,\n  data: [number, number, number, number],\n}\n\nexport interface LcdArgs extends LcdPins {\n  cols: number,\n  rows: number,\n}\n\nexport interface ColRow {\n  col: number,\n  row: number,\n}\n\nexport class Lcd {\n  private readonly args: LcdArgs;\n  private readonly internalLcd: InternalLcd;\n\n  constructor(args: LcdArgs) {\n    this.internalLcd = new InternalLcd(args);\n  }\n\n  public at({ col, row }: ColRow): this {\n    this.internalLcd.setCursor(col, row);\n    return this;\n  }\n\n  public print(str: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.internalLcd.print(str, (err) => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve();\n      });\n    });\n  }\n\n  public printAt(str: string, { col, row }: ColRow): Promise<void> {\n    return this.at({ col, row }).print(str);\n  }\n\n  public clear(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.internalLcd.clear(err => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve();\n      })\n    });\n  }\n\n  public home(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.internalLcd.home(err => {\n        if (err) {\n          return reject(err);\n        }\n\n        resolve();\n      })\n    });\n  }\n\n  public showCursor(): void {\n    this.internalLcd.cursor();\n  }\n\n  public hideCursor(): void {\n    this.internalLcd.noCursor();\n  }\n\n  public showBlink(): void {\n    this.internalLcd.blink();\n  }\n\n  public scrollDisplayLeft(): void {\n    this.internalLcd.scrollDisplayLeft();\n  }\n\n  public hideBlink(): void {\n    this.internalLcd.noBlink();\n  }\n\n  public scrollDisplayRight(): void {\n    this.internalLcd.scrollDisplayRight();\n  }\n\n  public leftToRight(): void {\n    this.internalLcd.leftToRight();\n  }\n\n  public rightToLeft(): void {\n    this.internalLcd.rightToLeft();\n  }\n\n  public autoScrollOn(): void {\n    this.internalLcd.autoscroll();\n  }\n\n  public autoScrollOff(): void {\n    this.internalLcd.noAutoscroll();\n  }\n\n  public close(): void {\n    this.internalLcd.close();\n  }\n\n  public getPins(): LcdPins {\n    const { rs, e, data } = this.args;\n\n    return { rs, e, data };\n  }\n\n  public getPinCodes(): [number, number, number, number, number, number] {\n    const { rs, e, data: [d1, d2, d3, d4] } = this.args;\n\n    return [rs, e, d1, d2, d3, d4];\n  }\n\n  public releasePins(): void {\n    this.internalLcd.close();\n  }\n}\n"],"file":"index.js"}